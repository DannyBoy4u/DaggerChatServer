// <auto-generated />
using System;
using DatabaseLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DatabaseLayer.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DatabaseLayer.Entities.WorkTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AssigneeName")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<long>("EpochCreateDate")
                        .HasColumnType("bigint");

                    b.Property<long>("EpochDueDate")
                        .HasColumnType("bigint");

                    b.Property<long>("EpochStartDate")
                        .HasColumnType("bigint");

                    b.Property<long>("EpochUpdatedDate")
                        .HasColumnType("bigint");

                    b.Property<string>("SiteSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<Guid>("TaskTypeId")
                        .HasColumnType("uuid");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UrlLink")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TaskTypeId");

                    b.ToTable("worktask", "tasking");
                });

            modelBuilder.Entity("DatabaseLayer.Entities.WorkTaskType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("worktasktype", "tasking");
                });

            modelBuilder.Entity("DatabaseLayer.Entities.WorkTask", b =>
                {
                    b.HasOne("DatabaseLayer.Entities.WorkTaskType", "TaskType")
                        .WithMany()
                        .HasForeignKey("TaskTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaskType");
                });
#pragma warning restore 612, 618
        }
    }
}
